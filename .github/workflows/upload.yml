name: YouTube Automation Pipeline (Cost Optimized)

on:
  schedule:
    # *** 비용 최소화를 위해 하루 1회 실행 (예: UTC 0시 = KST 오전 9시) ***
    - cron: '0 0 * * *'
  workflow_dispatch: # 수동 실행 가능

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies (ffmpeg, fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu

      - name: Install Python dependencies
        # 캐싱 추가하여 빌드 시간 단축 (비용 절감에 약간 도움)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run YouTube Automation Script
        env:
          # GitHub Secrets 설정은 이전 답변과 동일하게 필요
          GOOGLE_CLIENT_SECRET_JSON: ${{ secrets.GOOGLE_CLIENT_SECRET_JSON }}
          GOOGLE_TOKEN_JSON: ${{ secrets.GOOGLE_TOKEN_JSON }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          ELEVENLABS_VOICE_ID: ${{ secrets.ELEVENLABS_VOICE_ID }}
          OPENAI_API_KEY_1: ${{ secrets.OPENAI_API_KEY_1 }}
          OPENAI_API_KEY_2: ${{ secrets.OPENAI_API_KEY_2 }}
          # ... 필요한 OpenAI 키 Secret 추가 ...
          OPENAI_API_KEY_10: ${{ secrets.OPENAI_API_KEY_10 }}
          # TREND_KEYWORDS: ${{ secrets.TREND_KEYWORDS }} # 필요 시

        run: python secure_main.py

      - name: Upload logs on failure (optional)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure-logs
          path: |
            .secure_log.txt
            *.log
          retention-days: 5
